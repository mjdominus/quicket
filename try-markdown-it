#!/usr/bin/env python3

from pprint import pprint
from markdown_it import MarkdownIt
from markdown_it.tree import SyntaxTreeNode

md = MarkdownIt()

with open("test.md") as fh:
  z = fh.read()
  ln = z.splitlines()
  toks =  md.parse(ln)

#  toks = md.parse("a **b c d e _f_ g h**")
stn = SyntaxTreeNode(toks)
print(stn.pretty())
import pdb
pdb.set_trace()
assert True

nesting = 0
for t in toks:
    i = "| " * nesting
    s = t.content.replace('\n', '\\n')
    if s != "":
        s = f"<{s}>"
    chld = "" if t.children is None else f"({len(t.children)})"
    print(i, t.type, f" {s} {chld}", sep="")
    if t.children is not None:
        for c in t.children:
            print(i, "**", c)
    assert t.type == 'inline' or t.children is None
    nesting += t.nesting
